---
# file: roles/tomcat/tasks/main.yml

- name: Creat Tomcat group
  group: name=tomcat state=present system=yes

- name: Create Tomcat user
  user:
    name:       tomcat
    state:      present
    comment:    'Tomcat Web Server'
    createhome: no
    group:      tomcat
    home:       /opt/tomcat
    shell:      /usr/sbin/nologin
    system:     yes

- name: Create directories
  file:
    path:      "{{ item.path }}"
    owner:     "{{ item.owner }}"
    group:     "{{ item.group }}"
    mode:      "{{ item.mode }}"
    state:     directory
  with_items:
    - { path: /opt/dist, group: root, owner: root, mode: "u=rwX,go=rX" }

- name: Download Tomcat distribution
  get_url:
    url:      "{{ tomcat_download_url }}"
    dest:     "/opt/dist"
    checksum: "{{ tomcat_download_checksum }}"
  ignore_errors: "{{ ansible_check_mode }}"  

- name: Extract Tomcat
  unarchive:
    src:        "/opt/dist/apache-tomcat-{{ tomcat_version }}.tar.gz"
    dest:       "/opt"
    owner:      tomcat
    group:      tomcat
    mode:       "u=rwX,go=rX"
    remote_src: yes
  ignore_errors: '{{ ansible_check_mode }}'

- name: Create symlink
  file:
    src:   "/opt/apache-tomcat-{{ tomcat_version }}"
    dest:  "/opt/tomcat"
    state: link
  ignore_errors: '{{ ansible_check_mode }}'

- name: Tomcat customization
  template:
    src:   "{{ item.src }}"
    dest:  "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode:  "{{ item.mode }}"
  notify: restart tomcat
  with_items:
    - { src: setenv.sh.j2, dest: "/opt/tomcat/bin/setenv.sh", owner: tomcat, group: tomcat, mode: "o=rwx,go=rx" }
    - { src: tomcat.service.j2, dest: "/etc/systemd/system/tomcat.service", owner: root, group: root, mode: "u=rx,go=r" }

- name: Start tomcat
  ansible.builtin.service:
    name:    tomcat
    enabled: yes
    state:   started
  ignore_errors: "{{ ansible_check_mode }}"
